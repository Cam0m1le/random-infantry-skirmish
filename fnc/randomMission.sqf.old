RSTF_TASK_startHouse = {
	private ["_index", "_house"];
	
	_house = [];
	
	if (count(_this) > 0) then {
		_house = _this select 0;
	} else {
		_index = 0;
		while { _index < count(RSRF_NEUTRAL_HOUSES) } do {
			_current = RSRF_NEUTRAL_HOUSES select _index;
			_alive = { alive _x } count (_current select 1);
			if (_alive > 0) exitWith {
				_house = _current;
			};
			
			_index = _index + 1;
		};
	};
	
	if (count(_house) > 0) then {
		
		RSTF_TASK = [
			side(player), ["sideTask"],
			["Clear this house, because ... I don't know why","Clear house",""],
			getPos(_house select 0),
			"ASSIGNED"
		] call BIS_fnc_taskCreate;
		
		RSTF_TASK_TYPE = "house";
		RSTF_TASK_PARAMS = [_house];
	
		[_house] spawn {
			_house = _this select 0;
			waitUntil {({ alive _x } count (_house select 1)) == 0};

			[RSTF_TASK, "Succeeded", true] call BIS_fnc_taskSetState;
			["Task", RSTF_SCORE_PER_TASK] call RSTF_addPlayerScore;
			
			RSTF_TASK = "";
			RSTF_TASK_TYPE = "";
			RSTF_TASK_PARAMS = [];
			
			call RSTF_randomMission;
		};
		
	} else {
		//call RSTF_randomMission;
	};
};

RSTF_TASK_startElimination = {
	
	RSTF_TASK_TYPE = "elimination";
	RSTF_TASK_PARAMS = [];

};

RSTF_TASK_startRescue = {
	
	RSTF_TASK_TYPE = "rescue";
	RSTF_TASK_PARAMS = [];
	
	_position = [];
	_unit = objNull;
	
	if (count(_this) > 0) then {
		_position = _this select 0;
		_unit = _this select 1;
	} else {
	
		_type = round(random(1))
		if (_type == 0) then {
		
			_houses = nearestObjects [RSTF_POINT, ["House"], RSTF_NEUTRALS_RADIUS];
			_usable = [];
			{
				_positions = []; _i = 0;
				while{ (_x buildingPos _i) distance [0,0,0] > 0 } do
				{
					_positions set [count(_positions), [_i,_x buildingPos _i]];
					_i = _i + 1;
				};
				if (count(_positions) >= 4 && !(typeOf(_x) in RSTF_BANNED_BUILDINGS)) then
				{
					_found = false;
					{
						if (_x select 0 == _x) exitWith {
							_found = true;
						};
					} foreach RSRF_NEUTRAL_HOUSES;
				
					if (!_found) then {
						_usable set [count(_usable), [_x, _positions]];
					};
				};
			} foreach _houses;
			
			_house = _usable call BIS_fnc_selectRandom;
		
		} else {
		
			
		
		};
	
		/*
			OPTIONS:
				1. Spawn guy inside car
					+ spawn guys around car
					+ destroy tire or something
					! need to correctly choose location (close to enemies, not too far / close from player, on road)
					
				2. Spawn guy inside house
					+ spawn guys inside house
					! need to correctly choose house (not too far / close from player, musn't be occupied by neutrals)
		*/
		
	};
	
	RSTF_TASK = [
		side(player), ["sideTask"],
		["Save this guy, please","Rescue VIP",""],
		_position,
		"ASSIGNED"
	] call BIS_fnc_taskCreate;

};

if (RSTF_TASK != "") exitWith {
	[RSTF_TASK_TYPE, RSTF_TASK_PARAMS] call RSTF_TASK_start;
};

[] call RSTF_TASK_start;

true;